{"ast":null,"code":"var _jsxFileName = \"/Users/ronaldleonardo/Desktop/builds/chachat/src/components/Seach.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { collection, doc, getDoc, getDocs, query, serverTimestamp, setDoc, updateDoc, where } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { DisplayNoneContext } from \"../context/DisplayNoneContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n  const {\n    dispatchDisplay\n  } = useContext(DisplayNoneContext);\n  const hideTheDisplay = a => {\n    dispatch({\n      type: \"DISPLAY_NONE\",\n      payload: a\n    });\n  };\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const handleSearch = async e => {\n    e.preventDefault();\n    const q = query(collection(db, \"users\"), where(\"displayName\", \"==\", username.toLocaleLowerCase()));\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        setUser(doc.data());\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  // const handleKey = (e) => {\n  //   e.code == \"Enter\" && handleSearch();\n  // };\n\n  const handleSelect = async () => {\n    // check wether the group(chats in firestore) exist, if not create a new collection\n    const combinedId = currentUser.uid > user.uid ? currentUser.uid + user.uid : user.uid + currentUser.uid;\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId));\n      if (!res.exists()) {\n        //create a chat in chats collection\n        await setDoc(doc(db, \"chats\", combinedId), {\n          messages: []\n        });\n\n        //create user chats\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n      }\n    } catch (err) {}\n    setUser(null);\n    setUsername(\"\");\n    hideTheDisplay(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Find a user\",\n          onChange: e => setUsername(e.target.value),\n          value: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            display: \"none\"\n          },\n          children: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"User not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      onClick: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"gp0iBlpacLwTLrO9o3MF7P+bQUQ=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useContext","useState","collection","doc","getDoc","getDocs","query","serverTimestamp","setDoc","updateDoc","where","db","AuthContext","DisplayNoneContext","Search","username","setUsername","user","setUser","err","setErr","dispatchDisplay","hideTheDisplay","a","dispatch","type","payload","currentUser","handleSearch","e","preventDefault","q","toLocaleLowerCase","querySnapshot","forEach","data","handleSelect","combinedId","uid","res","exists","messages","displayName","photoURL","target","value","display"],"sources":["/Users/ronaldleonardo/Desktop/builds/chachat/src/components/Seach.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport {\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  query,\n  serverTimestamp,\n  setDoc,\n  updateDoc,\n  where,\n} from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { DisplayNoneContext } from \"../context/DisplayNoneContext\";\n\n\nconst Search = () => {\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n  const { dispatchDisplay } = useContext(DisplayNoneContext);\n\n  const hideTheDisplay = (a) => {\n    dispatch({ type: \"DISPLAY_NONE\", payload: a });\n  };\n\n  const { currentUser } = useContext(AuthContext);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    const q = query(\n      collection(db, \"users\"),\n      where(\"displayName\", \"==\", username.toLocaleLowerCase())\n    );\n\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach((doc) => {\n        setUser(doc.data());\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  // const handleKey = (e) => {\n  //   e.code == \"Enter\" && handleSearch();\n  // };\n\n  const handleSelect = async () => {\n    // check wether the group(chats in firestore) exist, if not create a new collection\n    const combinedId =\n      currentUser.uid > user.uid\n        ? currentUser.uid + user.uid\n        : user.uid + currentUser.uid;\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId));\n\n      if (!res.exists()) {\n        //create a chat in chats collection\n        await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\n\n        //create user chats\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n          },\n          [combinedId + \".date\"]: serverTimestamp(),\n        });\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL,\n          },\n          [combinedId + \".date\"]: serverTimestamp(),\n        });\n        \n      }\n    } catch (err) {}\n    setUser(null);\n    setUsername(\"\");\n    hideTheDisplay(true);\n\n  };\n\n  return (\n    <div className=\"search\">\n      <div className=\"searchForm\">\n        <form onSubmit={handleSearch}>\n          <input\n            type=\"text\"\n            placeholder=\"Find a user\"\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n          />\n          <button type=\"submit\" style={{display: \"none\"}}>search</button>\n        </form>\n      </div>\n      {err && <span>User not found!</span>}\n      {user && (\n        <div className=\"userChat\" onClick={handleSelect}>\n          <img src={user.photoURL} alt=\"\" />\n          <div className=\"userChatInfo\">\n            <span>{user.displayName}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from\"/Users/ronaldleonardo/Desktop/builds/chachat/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{onAuthStateChanged}from\"firebase/auth\";import{createContext,useContext,useEffect,useReducer,useState}from\"react\";import{auth}from\"../firebase\";import{AuthContext}from\"./AuthContext\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ChatContext=/*#__PURE__*/createContext();export var ChatContextProvider=function ChatContextProvider(_ref){var children=_ref.children;var _useContext=useContext(AuthContext),currentUser=_useContext.currentUser;var INITIAL_STATE={chatId:\"null\",user:{}};var chatReducer=function chatReducer(state,action){switch(action.type){case\"CHANGE_USER\":return{user:action.payload,chatId:currentUser.uid>action.payload.uid?currentUser.uid+action.payload.uid:action.payload.uid+currentUser.uid};default:return state;}};var _useReducer=useReducer(chatReducer,INITIAL_STATE),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(ChatContext.Provider,{value:{data:state,dispatch:dispatch},children:children});};","map":{"version":3,"names":["onAuthStateChanged","createContext","useContext","useEffect","useReducer","useState","auth","AuthContext","ChatContext","ChatContextProvider","children","currentUser","INITIAL_STATE","chatId","user","chatReducer","state","action","type","payload","uid","dispatch","data"],"sources":["/Users/ronaldleonardo/Desktop/builds/chachat/src/context/ChatContext.js"],"sourcesContent":["import { onAuthStateChanged } from \"firebase/auth\";\nimport {\n  createContext,\n  useContext,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport { auth } from \"../firebase\";\nimport { AuthContext } from \"./AuthContext\";\n\nexport const ChatContext = createContext();\n\nexport const ChatContextProvider = ({ children }) => {\n  const { currentUser } = useContext(AuthContext);\n  const INITIAL_STATE = {\n    chatId: \"null\",\n    user: {},\n  };\n\n  const chatReducer = (state, action) => {\n    switch (action.type) {\n      case \"CHANGE_USER\":\n        return {\n          user: action.payload,\n          chatId:\n            currentUser.uid > action.payload.uid\n              ? currentUser.uid + action.payload.uid\n              : action.payload.uid + currentUser.uid,\n        };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\n\n  return (\n    <ChatContext.Provider value={{ data: state, dispatch }}>\n      {children}\n    </ChatContext.Provider>\n  );\n};\n"],"mappings":"kIAAA,OAASA,kBAAkB,KAAQ,eAAe,CAClD,OACEC,aAAa,CACbC,UAAU,CACVC,SAAS,CACTC,UAAU,CACVC,QAAQ,KACH,OAAO,CACd,OAASC,IAAI,KAAQ,aAAa,CAClC,OAASC,WAAW,KAAQ,eAAe,CAAC,2CAE5C,MAAO,IAAMC,YAAW,cAAGP,aAAa,EAAE,CAE1C,MAAO,IAAMQ,oBAAmB,CAAG,QAAtBA,oBAAmB,MAAqB,IAAfC,SAAQ,MAARA,QAAQ,CAC5C,gBAAwBR,UAAU,CAACK,WAAW,CAAC,CAAvCI,WAAW,aAAXA,WAAW,CACnB,GAAMC,cAAa,CAAG,CACpBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAE,CAAC,CACT,CAAC,CAED,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIC,KAAK,CAAEC,MAAM,CAAK,CACrC,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,aAAa,CAChB,MAAO,CACLJ,IAAI,CAAEG,MAAM,CAACE,OAAO,CACpBN,MAAM,CACJF,WAAW,CAACS,GAAG,CAAGH,MAAM,CAACE,OAAO,CAACC,GAAG,CAChCT,WAAW,CAACS,GAAG,CAAGH,MAAM,CAACE,OAAO,CAACC,GAAG,CACpCH,MAAM,CAACE,OAAO,CAACC,GAAG,CAAGT,WAAW,CAACS,GACzC,CAAC,CACH,QACE,MAAOJ,MAAK,CAAC,CAEnB,CAAC,CAED,gBAA0BZ,UAAU,CAACW,WAAW,CAAEH,aAAa,CAAC,4CAAzDI,KAAK,iBAAEK,QAAQ,iBAEtB,mBACE,KAAC,WAAW,CAAC,QAAQ,EAAC,KAAK,CAAE,CAAEC,IAAI,CAAEN,KAAK,CAAEK,QAAQ,CAARA,QAAS,CAAE,UACpDX,QAAQ,EACY,CAE3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}